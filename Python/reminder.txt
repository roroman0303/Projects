string.split(' ', 2) - деление по разделителю с начала
string.rsplit(' ', 2) - деление по разделителю с конца
string.strip() - удаление пробельных символов с начала и конца строки
string.rstrip() - удаление пробельных символов с конца строки
string.lstrip() - удаление пробельных символов с начала строки
string.replace('1', '2', maxcount=2) - меняет одну подстроку на другую
string.lower() - приведение всех букв к нижнему регистру
string.count('sub', start=2, end=10) - подсчёт вхождений подстроки
string.find('bar') - поиск индекса первого вхождения (-1 если не найдено)
string.rfind('bar') - поиск индекса последнего вхождения (-1 если не найдено)
string.splitlines() - превращает текст в список строк по символу переноса строки
','.join(list) - соединяет в строку с разделителями

string.isspace() - является ли строка пробельной
string.isalnum() - состоит ли строка только из цифр/букв
string.isdigit() - состоит ли строка только из цифр
string.startswith('The') - начинается ли строка с 'The'
string.endswith('end.') - заканчивается ли строка на 'end.'

string.format('1', '2') - подстановка
'Int is %d, String is %s, Float is %f' % (2, 'Roman', 2.12) - подстановка

isinstance(1, int) - проверяет объект на его тип/класс
iter(input, "") - вызывается функция до тех пор, пока возвращаемое значение не будет равно ""
list(iter(input, "")) - многострочный ввод, пока не будет пустой строки
max() - находит максимальное в итерируемом
min() - находит минимальное в итерируемом
sum() - сумма элементов
with open('filename.txt', 'r', encoding='utf-8', errors='ignore') as file - открыть файл
	string = file.read() - чтение содержимого файла
new_dict = sorted(old_dict.items(), key = lambda item: item[0]) - сортировка словаря по ключам

abs(-265) - модуль числа
pow(2,10) - возводит число в степень
round(2.66, 1) - округление числа

match = re.match(r'\S+', string).group(0) - поиск вхождения в начале строки
search = re.search(r'\S+', string).group(0) - поиск вхождения во всей строке
findall = re.findall(r'\S+', string) - поиск всех вхождений
split = re.split(r'\s+', string) - разделение строки по шаблону
sub = re.sub(r'\s+', '_', string) - замена шаблона на подстроку

. - Один любой символ, кроме новой строки \n.
? - 0 или 1 вхождение шаблона слева
+ - 1 и более вхождений шаблона слева
* - 0 и более вхождений шаблона слева
\w - Любая цифра или буква
\W - Все, кроме буквы или цифры
\d - Любая цифра [0-9]
\D - Все, кроме цифры
\s - Любой пробельный символ
\S - Любой непробельный символ
\b - Граница слова
[..] - Один из символов в скобках
[^..] - Любой символ, кроме тех, что в скобках
\ - Экранирование специальных символов (\. означает точку или \+ — знак «плюс»)
^ и $ - Начало и конец строки соответственно
{n,m} - От n до m вхождений ({,m} — от 0 до m)
a|b - Соответствует a или b
() - Группирует выражение и возвращает найденный текст
\t, \n, \r - Символ табуляции, новой строки и возврата каретки

help() - справка о функции